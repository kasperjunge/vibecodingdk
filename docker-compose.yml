services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: vibecodingdk-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-vibecodingdk}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Port removed - internal service only
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vibecodingdk-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Environment
      ENVIRONMENT: ${ENVIRONMENT:-prod}
      
      # Database
      DATABASE_TYPE: postgresql
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-vibecodingdk}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      
      # Backend Configuration
      BACKEND_HOST: 0.0.0.0
      BACKEND_PORT: 8000
      
      # Frontend Configuration
      FRONTEND_HOST: frontend
      FRONTEND_PORT: 80
      
      # Security
      SECRET_KEY: ${SECRET_KEY}
      
      # Admin User
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_FIRST_NAME: ${ADMIN_FIRST_NAME}
      ADMIN_LAST_NAME: ${ADMIN_LAST_NAME}
      
      # Email Configuration
      EMAIL_PROVIDER: ${EMAIL_PROVIDER:-mailhog}
      MAIL_USERNAME: ${MAIL_USERNAME:-}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-}
      MAIL_FROM: ${MAIL_FROM:-noreply@example.com}
      MAIL_PORT: ${MAIL_PORT:-587}
      MAIL_SERVER: ${MAIL_SERVER:-localhost}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME:-Vibe Coding DK}
      MAIL_STARTTLS: ${MAIL_STARTTLS:-true}
      MAIL_SSL_TLS: ${MAIL_SSL_TLS:-false}
      USE_CREDENTIALS: ${USE_CREDENTIALS:-true}
      VALIDATE_CERTS: ${VALIDATE_CERTS:-true}
      
      # Resend API
      RESEND_API_KEY: ${RESEND_API_KEY:-}
      
      # Slack
      SLACK_WEBHOOK_URL: ${SLACK_WEBHOOK_URL:-}
      
      # Verification
      VERIFICATION_TOKEN_EXPIRE_HOURS: ${VERIFICATION_TOKEN_EXPIRE_HOURS:-24}
    # Port removed - internal service only
    expose:
      - "8000"
    volumes:
      - ./backend/data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (React with Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vibecodingdk-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    # Port exposed for Coolify's reverse proxy
    expose:
      - "80"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
    driver: local
